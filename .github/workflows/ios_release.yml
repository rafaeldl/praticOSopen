name: Release iOS to TestFlight

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  ios:
    runs-on: macos-15
    env:
      BUNDLE_ID: br.com.rafsoft.praticos

    steps:
      - uses: actions/checkout@v4

      # Flutter SDK (com cache interno)
      - name: Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: stable
          cache: true

      # 💾 Cache do Pub (Dart/Flutter packages)
      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Flutter deps
        run: flutter pub get

      # Xcode + iOS SDK (necessário na imagem nova)
      - name: Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Download iOS Platform
        run: xcodebuild -downloadPlatform iOS

      # 💾 Cache dos Pods (pasta Pods)
      - name: Cache CocoaPods (Pods dir)
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-xcode16.2-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-xcode16.2-
            ${{ runner.os }}-pods-

      # (Opcional) 💾 Cache do Specs local do CocoaPods
      - name: Cache CocoaPods Specs
        uses: actions/cache@v4
        with:
          path: ~/.cocoapods
          key: ${{ runner.os }}-cocoaspecs
          restore-keys: |
            ${{ runner.os }}-cocoaspecs

      # 💾 Ruby + Bundler com cache automático (usa ios/Gemfile)
      - name: Ruby (bundler cache)
        uses: ruby/setup-ruby@v1
        env:
          BUNDLE_GEMFILE: ios/Gemfile
        with:
          ruby-version: '3.2'
          bundler-cache: true

      # 🔐 Importa o certificado .p12 no keychain
      - name: Import distribution cert
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_DIST_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_DIST_CERTIFICATE_PASSWORD }}

      # 📄 Instala o .mobileprovision vindo da secret (Base64)
      - name: Install provisioning profile
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          PROFILE="$HOME/Library/MobileDevice/Provisioning Profiles/AppStore.mobileprovision"
          echo -n "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > "$PROFILE"

          /usr/bin/security cms -D -i "$PROFILE" > profile.plist
          NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' profile.plist)
          UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' profile.plist)
          TEAM=$(/usr/libexec/PlistBuddy -c 'Print :TeamIdentifier:0' profile.plist)

          echo "PROFILE_NAME=$NAME" >> $GITHUB_ENV
          echo "PROFILE_UUID=$UUID" >> $GITHUB_ENV
          echo "DEVELOPMENT_TEAM=$TEAM" >> $GITHUB_ENV

          echo "Using profile: $NAME (UUID $UUID) - TEAM $TEAM"

      # 🧩 CocoaPods (vai aproveitar os caches acima)
      - name: Pod install
        working-directory: ios
        run: bundle exec pod install --repo-update

      # 🚀 Build + upload via Fastlane
      - name: Fastlane beta
        working-directory: ios
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_PRIVATE_KEY }}
          BUNDLE_ID: ${{ env.BUNDLE_ID }}
          DEVELOPMENT_TEAM: ${{ env.DEVELOPMENT_TEAM }}
          PROFILE_UUID: ${{ env.PROFILE_UUID }}
          PROFILE_NAME: ${{ env.PROFILE_NAME }}
          FASTLANE_SKIP_UPDATE_CHECK: "true"
          CI: "true"
        run: bundle exec fastlane beta

      - name: Upload fastlane logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: fastlane-logs
          path: |
            $HOME/Library/Logs/fastlane/fastlane.log
            ios/fastlane/report.xml
